// Generated by CoffeeScript 1.11.0
(function() {
  var assets, browserSync, concat, del, fs, gulp, imgeMin, runSequence;

  fs = require('fs');

  gulp = require('gulp');

  runSequence = require('run-sequence');

  del = require('del');

  concat = require('gulp-concat');

  imgeMin = require('gulp-imagemin');

  browserSync = require('browser-sync').create();

  assets = JSON.parse(fs.readFileSync('assets.json'));

  console.log(assets);

  gulp.task('default', function(callback) {
    return runSequence(['clean'], ['build'], ['serve', 'watch'], callback);
  });

  gulp.task('clean', function(callback) {
    return del(['./dist/'], callback);
  });

  gulp.task('build', function(callback) {
    return runSequence(['assetsJs', 'assetsCss', 'assetsPlugins'], ['appJs', 'appCss', 'imageMin', 'copyHtml'], callback);
  });

  gulp.task('serve', function() {
    return browserSync.init({
      server: {
        baseDir: './dist/'
      },
      port: 2741
    });
  });

  gulp.task('watch', function() {
    return gulp.watch('./src/**/*.*', ['reload']);
  });

  gulp.task('reload', function(callback) {
    return runSequence(['build'], ['reload-browser'], callback);
  });

  gulp.task('reload-browser', function() {
    return browserSync.reload();
  });

  gulp.task('copyHtml', function() {
    return gulp.src('./src/**/*.html').pipe(gulp.dest('./dist/'));
  });

  gulp.task('assetsJs', function() {
    return gulp.src(assets.assetsJs).pipe(concat('assets.js', {
      newLine: ';\n'
    })).pipe(gulp.dest('./dist/assets/js/'));
  });

  gulp.task('assetsCss', function() {
    return gulp.src(assets.assetsCss).pipe(concat('assetsCss.css', {
      newLine: '\n\n'
    })).pipe(gulp.dest('./dist/assets/css/'));
  });

  gulp.task('assetsPlugins', function() {
    return gulp.src(assets.noCompressPlugin).pipe(gulp.dest('./dist/assets/Plugins/'));
  });

  gulp.task('appJs', function() {
    return gulp.src(assets.appJs).pipe(concat('app.js', {
      newLine: ';\n\n'
    })).pipe(gulp.dest('./dist/assets/js/'));
  });

  gulp.task('appCss', function() {
    return gulp.src(assets.appCss).pipe(concat('appCss.css', {
      newLine: '\n\n'
    })).pipe(gulp.dest('./dist/assets/css/'));
  });

  gulp.task('imageMin', function() {
    return gulp.src(assets.copyImages).pipe(gulp.dest('./dist/assets/images/'));
  });

}).call(this);

//# sourceMappingURL=gulpfile.js.map
